{"ast":null,"code":"var _jsxFileName = \"/Users/Varun/Data/Workspace/The career path/React/file-browser/src/mapper.js\";\nimport React, { useState } from 'react';\nimport Folder from './folder';\nimport File from './file';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet nestedFolder = [];\nconst [open, setOpen] = useState(folderItems.isOpen ? 'open' : 'close');\nconst [length, setLength] = useState(folderItems.insideFolder.length);\n\nfunction handleImgDivClick() {\n  folderItems.isOpen = !folderItems.isOpen;\n  setOpen(folderItems.isOpen ? 'open' : 'close');\n}\n\nfunction addNewFolder(folderData) {\n  folderData.push({\n    type: 'Folder',\n    name: '',\n    isOpen: false,\n    insideFolder: []\n  });\n  setOpen('open');\n  setLength(folderData.length);\n}\n\nfunction addNewFile(folderData) {\n  folderData.push({\n    type: 'File',\n    name: '',\n    insideFolder: []\n  });\n  setOpen('open');\n  setLength(folderData.length);\n}\n\nfunction Mapper({\n  folderItems\n}) {\n  if (folderItems.insideFolder.length > 0) {\n    nestedFolder = folderItems.insideFolder.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Mapper, {\n        folderItems: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      \"marginLeft\": \"25px\",\n      \"marginTop\": \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayHierarchy\",\n      children: folderItems.type === \"Folder\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Folder, {\n          open: open,\n          handleImgDivClick: handleImgDivClick,\n          folderName: folderItems.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNewFolder(folderItems.insideFolder),\n          children: \"New Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNewFile(folderItems.insideFolder),\n          children: \"New File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(File, {\n        fileName: folderItems.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), length ? nestedFolder : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Mapper;\nexport default Mapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mapper\");","map":{"version":3,"sources":["/Users/Varun/Data/Workspace/The career path/React/file-browser/src/mapper.js"],"names":["React","useState","Folder","File","nestedFolder","open","setOpen","folderItems","isOpen","length","setLength","insideFolder","handleImgDivClick","addNewFolder","folderData","push","type","name","addNewFile","Mapper","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,WAAP;;;AAEA,IAAIC,YAAY,GAAE,EAAlB;AACE,MAAM,CAACC,IAAD,EAAQC,OAAR,IAAmBL,QAAQ,CAACM,WAAW,CAACC,MAAZ,GAAqB,MAArB,GAA8B,OAA/B,CAAjC;AACA,MAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBT,QAAQ,CAACM,WAAW,CAACI,YAAZ,CAAyBF,MAA1B,CAAnC;;AAEA,SAASG,iBAAT,GAA4B;AAC1BL,EAAAA,WAAW,CAACC,MAAZ,GAAqB,CAACD,WAAW,CAACC,MAAlC;AACAF,EAAAA,OAAO,CAACC,WAAW,CAACC,MAAZ,GAAqB,MAArB,GAA8B,OAA/B,CAAP;AACD;;AAED,SAASK,YAAT,CAAsBC,UAAtB,EAAiC;AAC/BA,EAAAA,UAAU,CAACC,IAAX,CACE;AACEC,IAAAA,IAAI,EAAG,QADT;AAEEC,IAAAA,IAAI,EAAG,EAFT;AAGET,IAAAA,MAAM,EAAG,KAHX;AAIEG,IAAAA,YAAY,EAAG;AAJjB,GADF;AAOAL,EAAAA,OAAO,CAAC,MAAD,CAAP;AACAI,EAAAA,SAAS,CAACI,UAAU,CAACL,MAAZ,CAAT;AACD;;AAED,SAASS,UAAT,CAAoBJ,UAApB,EAA+B;AAC7BA,EAAAA,UAAU,CAACC,IAAX,CACE;AACEC,IAAAA,IAAI,EAAG,MADT;AAEEC,IAAAA,IAAI,EAAG,EAFT;AAGEN,IAAAA,YAAY,EAAG;AAHjB,GADF;AAMAL,EAAAA,OAAO,CAAC,MAAD,CAAP;AACAI,EAAAA,SAAS,CAACI,UAAU,CAACL,MAAZ,CAAT;AACD;;AAGH,SAASU,MAAT,CAAgB;AAACZ,EAAAA;AAAD,CAAhB,EAA8B;AAE5B,MAAGA,WAAW,CAACI,YAAZ,CAAyBF,MAAzB,GAAkC,CAArC,EAAwC;AACtCL,IAAAA,YAAY,GAAGG,WAAW,CAACI,YAAZ,CAAyBS,GAAzB,CAA6B,CAACC,IAAD,EAAMC,KAAN,KAAc;AACxD,0BACE,QAAC,MAAD;AAAqB,QAAA,WAAW,EAAID;AAApC,SAAcC,KAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJc,CAAf;AAKD;;AAED,sBACE;AAAK,IAAA,KAAK,EAAI;AAAC,oBAAe,MAAhB;AAAyB,mBAAc;AAAvC,KAAd;AAAA,4BACE;AAAK,MAAA,SAAS,EAAE,kBAAhB;AAAA,gBACGf,WAAW,CAACS,IAAZ,KAAqB,QAArB,gBACC;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,IAAI,EAAIX,IADV;AAEE,UAAA,iBAAiB,EAAGO,iBAFtB;AAGE,UAAA,UAAU,EAAEL,WAAW,CAACU;AAH1B;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAQ,UAAA,OAAO,EAAE,MAAIJ,YAAY,CAACN,WAAW,CAACI,YAAb,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAQ,UAAA,OAAO,EAAE,MAAIO,UAAU,CAACX,WAAW,CAACI,YAAb,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA,sBADD,gBAWC,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAGJ,WAAW,CAACU;AAA7B;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA,YADF,EAgBKR,MAAM,GAAGL,YAAH,GAAkB,IAhB7B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;KA/BQe,M;AAgCT,eAAeA,MAAf","sourcesContent":["import React , {useState} from 'react'\nimport Folder from './folder'\nimport File from './file'\nimport './App.css'\n\nlet nestedFolder =[]\n  const [open , setOpen] = useState(folderItems.isOpen ? 'open' : 'close')\n  const [length,setLength] = useState(folderItems.insideFolder.length)\n\n  function handleImgDivClick(){\n    folderItems.isOpen = !folderItems.isOpen\n    setOpen(folderItems.isOpen ? 'open' : 'close')\n  }\n\n  function addNewFolder(folderData){\n    folderData.push(\n      {\n        type : 'Folder',\n        name : '',\n        isOpen : false,\n        insideFolder : []\n    })\n    setOpen('open')\n    setLength(folderData.length)\n  }\n\n  function addNewFile(folderData){\n    folderData.push(\n      {\n        type : 'File',\n        name : '',\n        insideFolder : []\n    })\n    setOpen('open')\n    setLength(folderData.length)\n  }\n\n\nfunction Mapper({folderItems}){\n  \n  if(folderItems.insideFolder.length > 0 ){\n    nestedFolder = folderItems.insideFolder.map((item,index)=>{\n      return (\n        <Mapper key ={index} folderItems = {item} />\n      )\n    })\n  } \n\n  return (\n    <div style = {{\"marginLeft\" : \"25px\" , \"marginTop\" : \"10px\" }}>\n      <div className ='displayHierarchy'>\n        {folderItems.type === \"Folder\" ? \n          <>\n            <Folder \n              open = {open} \n              handleImgDivClick ={handleImgDivClick} \n              folderName={folderItems.name}\n            /> \n            <button onClick={()=>addNewFolder(folderItems.insideFolder)}>New Folder</button>\n            <button onClick={()=>addNewFile(folderItems.insideFolder)}>New File</button>\n          </>\n          : \n          <File fileName ={folderItems.name}/>\n        }\n      </div>\n        {length ? nestedFolder : null}\n    </div>\n  )\n\n}\nexport default Mapper;"]},"metadata":{},"sourceType":"module"}