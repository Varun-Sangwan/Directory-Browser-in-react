{"ast":null,"code":"var _jsxFileName = \"/Users/Varun/Data/Workspace/The career path/React/file-browser/src/mapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Folder from \"./folder\";\nimport File from \"./file\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Mapper({\n  folderItems\n}) {\n  _s();\n\n  let nestedFolder = [];\n  const [items, setItems] = useState(folderItems);\n  const [value, setValue] = useState(\"\");\n  const [nameAvailable, setNameAvailable] = useState(folderItems.name);\n\n  function handleImgDivClick() {\n    items.isOpen = !items.isOpen;\n    setItems({ ...items\n    });\n  }\n\n  function addNewFolder() {\n    items.insideFolder.push({\n      type: \"Folder\",\n      name: value,\n      isOpen: false,\n      insideFolder: []\n    });\n    items.isOpen = true;\n    setItems({ ...items\n    });\n  }\n\n  function addNewFile() {\n    items.insideFolder.push({\n      type: \"File\",\n      name: \"\",\n      insideFolder: []\n    });\n    items.isOpen = true;\n    setItems({ ...items\n    });\n  }\n\n  if (items.insideFolder.length > 0) {\n    nestedFolder = items.insideFolder.map((item, index) => /*#__PURE__*/_jsxDEV(Mapper, {\n      folderItems: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: \"25px\",\n      marginTop: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayHierarchy\",\n      children: items.type === \"Folder\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Folder, {\n          folderItems: items,\n          folderName: nameAvailable ? items.name : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"enter the folder name here\",\n            value: value,\n            onChange: event => setValue(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this),\n          open: items.isOpen && items.insideFolder.length ? \"open\" : \"close\",\n          handleImgDivClick: handleImgDivClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewFolder,\n          children: \"New Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewFile,\n          children: \"New File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(File, {\n        fileName: items.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), items.isOpen ? nestedFolder : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mapper, \"m9o/qO7ZQN/8v1SoRK5nFY8RjKU=\");\n\n_c = Mapper;\nexport default Mapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mapper\");","map":{"version":3,"sources":["/Users/Varun/Data/Workspace/The career path/React/file-browser/src/mapper.js"],"names":["React","useState","Folder","File","Mapper","folderItems","nestedFolder","items","setItems","value","setValue","nameAvailable","setNameAvailable","name","handleImgDivClick","isOpen","addNewFolder","insideFolder","push","type","addNewFile","length","map","item","index","marginLeft","marginTop","event","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Folder from \"./folder\";\nimport File from \"./file\";\nimport \"./App.css\";\n\nfunction Mapper({ folderItems }) {\n  let nestedFolder = [];\n  const [items, setItems] = useState(folderItems);\n  const [value, setValue] = useState(\"\");\n  const [nameAvailable, setNameAvailable] = useState(folderItems.name);\n\n  function handleImgDivClick() {\n    items.isOpen = !items.isOpen;\n    setItems({ ...items });\n  }\n\n  function addNewFolder() {\n    items.insideFolder.push({\n      type: \"Folder\",\n      name: value,\n      isOpen: false,\n      insideFolder: [],\n    });\n    items.isOpen = true;\n    setItems({ ...items });\n  }\n\n  function addNewFile() {\n    items.insideFolder.push({\n      type: \"File\",\n      name: \"\",\n      insideFolder: [],\n    });\n    items.isOpen = true;\n    setItems({ ...items });\n  }\n\n  if (items.insideFolder.length > 0) {\n    nestedFolder = items.insideFolder.map((item, index) => (\n      <Mapper key={index} folderItems={item} />\n    ));\n  }\n\n  return (\n    <div style={{ marginLeft: \"25px\", marginTop: \"10px\" }}>\n      <div className=\"displayHierarchy\">\n        {items.type === \"Folder\" ? (\n          <>\n            <Folder\n              folderItems={items}\n              folderName={\n                nameAvailable ? (\n                  items.name\n                ) : (\n                  <input\n                    type=\"text\"\n                    placeholder=\"enter the folder name here\"\n                    value={value}\n                    onChange={(event) => setValue(event.target.value)}\n                  />\n                )\n              }\n              open={\n                items.isOpen && items.insideFolder.length ? \"open\" : \"close\"\n              }\n              handleImgDivClick={handleImgDivClick}\n            />\n            <button onClick={addNewFolder}>New Folder</button>\n            <button onClick={addNewFile}>New File</button>\n          </>\n        ) : (\n          <File fileName={items.name} />\n        )}\n      </div>\n      {items.isOpen ? nestedFolder : null}\n    </div>\n  );\n}\nexport default Mapper;\n"]},"metadata":{},"sourceType":"module"}