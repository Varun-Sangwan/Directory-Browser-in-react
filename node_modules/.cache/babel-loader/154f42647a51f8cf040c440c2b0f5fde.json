{"ast":null,"code":"var _jsxFileName = \"/Users/Varun/Data/Workspace/The career path/React/file-browser/src/components/Explorer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Folder from \"../Folder\";\nimport File from \"../File\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Explorer({\n  folderItems\n}) {\n  _s();\n\n  let nestedFolder = [];\n  const [items, setItems] = useState(folderItems);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  function toggleFolder() {\n    items.isOpen = !items.isOpen;\n    setItems({ ...items\n    });\n  }\n\n  function addNewFolder() {\n    items.children.push({\n      type: \"folder\",\n      name: \"\",\n      isOpen: false,\n      children: []\n    });\n    items.isOpen = true;\n    setItems({ ...items\n    });\n  }\n\n  function addNewFile() {\n    items.children.push({\n      type: \"file\",\n      name: \"\",\n      children: []\n    });\n    items.isOpen = true;\n    setItems({ ...items\n    });\n  }\n\n  function emptyFolder() {\n    items.children = [];\n    setItems({ ...items\n    });\n  }\n\n  if (items.children.length > 0) {\n    nestedFolder = items.children.map((item, index) => /*#__PURE__*/_jsxDEV(Explorer, {\n      folderItems: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"explorer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayHierarchy\",\n      children: items.type === \"folder\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Folder, {\n          items: items,\n          name: items.name ? items.name : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"enter the folder name here\",\n            value: inputValue,\n            onChange: event => {\n              setInputValue(event.target.value);\n            },\n            onBlur: event => {\n              items.name = event.target.value;\n              items.isOpen = true;\n              setItems({ ...items\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this),\n          open: items.isOpen && items.children.length ? \"open\" : \"close\",\n          toggleFolder: toggleFolder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewFolder,\n          children: \"New Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewFile,\n          children: \"New File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: emptyFolder,\n          children: \"Empty Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), \" // styling\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(File, {\n        name: // remove file from prop name\n        items.name ? items.name : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"enter the file name here\",\n          value: inputValue,\n          onChange: event => {\n            setInputValue(event.target.value);\n          },\n          onBlur: event => {\n            items.name = event.target.value;\n            setItems({ ...items\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this) // create a function and do both folder and file functionality there\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), items.isOpen ? nestedFolder : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Explorer, \"BLKTGflhjVKQ8I+ENPd7xWtS/7Q=\");\n\n_c = Explorer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Explorer\");","map":{"version":3,"sources":["/Users/Varun/Data/Workspace/The career path/React/file-browser/src/components/Explorer/index.js"],"names":["React","useState","Folder","File","Explorer","folderItems","nestedFolder","items","setItems","inputValue","setInputValue","toggleFolder","isOpen","addNewFolder","children","push","type","name","addNewFile","emptyFolder","length","map","item","index","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,aAAP;;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAmC;AAAA;;AAChD,MAAIC,YAAY,GAAG,EAAnB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACI,WAAD,CAAlC;AACA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;;AAEA,WAASU,YAAT,GAAwB;AACtBJ,IAAAA,KAAK,CAACK,MAAN,GAAe,CAACL,KAAK,CAACK,MAAtB;AACAJ,IAAAA,QAAQ,CAAC,EAAE,GAAGD;AAAL,KAAD,CAAR;AACD;;AAED,WAASM,YAAT,GAAwB;AACtBN,IAAAA,KAAK,CAACO,QAAN,CAAeC,IAAf,CAAoB;AAClBC,MAAAA,IAAI,EAAE,QADY;AAElBC,MAAAA,IAAI,EAAE,EAFY;AAGlBL,MAAAA,MAAM,EAAE,KAHU;AAIlBE,MAAAA,QAAQ,EAAE;AAJQ,KAApB;AAMAP,IAAAA,KAAK,CAACK,MAAN,GAAe,IAAf;AACAJ,IAAAA,QAAQ,CAAC,EAAE,GAAGD;AAAL,KAAD,CAAR;AACD;;AAED,WAASW,UAAT,GAAsB;AACpBX,IAAAA,KAAK,CAACO,QAAN,CAAeC,IAAf,CAAoB;AAClBC,MAAAA,IAAI,EAAE,MADY;AAElBC,MAAAA,IAAI,EAAE,EAFY;AAGlBH,MAAAA,QAAQ,EAAE;AAHQ,KAApB;AAKAP,IAAAA,KAAK,CAACK,MAAN,GAAe,IAAf;AACAJ,IAAAA,QAAQ,CAAC,EAAE,GAAGD;AAAL,KAAD,CAAR;AACD;;AAED,WAASY,WAAT,GAAuB;AACrBZ,IAAAA,KAAK,CAACO,QAAN,GAAiB,EAAjB;AACAN,IAAAA,QAAQ,CAAC,EAAE,GAAGD;AAAL,KAAD,CAAR;AACD;;AAED,MAAIA,KAAK,CAACO,QAAN,CAAeM,MAAf,GAAwB,CAA5B,EAA+B;AAC7Bd,IAAAA,YAAY,GAAGC,KAAK,CAACO,QAAN,CAAeO,GAAf,CAAmB,CAACC,IAAD,EAAOC,KAAP,kBAChC,QAAC,QAAD;AAAsB,MAAA,WAAW,EAAED;AAAnC,OAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,YADa,CAAf;AAGD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACGhB,KAAK,CAACS,IAAN,KAAe,QAAf,gBACC;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,KAAK,EAAET,KADT;AAEE,UAAA,IAAI,EACFA,KAAK,CAACU,IAAN,GACEV,KAAK,CAACU,IADR,gBAGE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,4BAFd;AAGE,YAAA,KAAK,EAAER,UAHT;AAIE,YAAA,QAAQ,EAAGe,KAAD,IAAW;AACnBd,cAAAA,aAAa,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,aANH;AAOE,YAAA,MAAM,EAAGF,KAAD,IAAW;AACjBjB,cAAAA,KAAK,CAACU,IAAN,GAAaO,KAAK,CAACC,MAAN,CAAaC,KAA1B;AACAnB,cAAAA,KAAK,CAACK,MAAN,GAAe,IAAf;AACAJ,cAAAA,QAAQ,CAAC,EAAE,GAAGD;AAAL,eAAD,CAAR;AACD;AAXH;AAAA;AAAA;AAAA;AAAA,kBANN;AAqBE,UAAA,IAAI,EAAEA,KAAK,CAACK,MAAN,IAAgBL,KAAK,CAACO,QAAN,CAAeM,MAA/B,GAAwC,MAAxC,GAAiD,OArBzD;AAsBE,UAAA,YAAY,EAAET;AAtBhB;AAAA;AAAA;AAAA;AAAA,gBADF,eAyBE;AAAQ,UAAA,OAAO,EAAEE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBF,eA0BE;AAAQ,UAAA,OAAO,EAAEK,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BF,eA2BE;AAAQ,UAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BF;AAAA,sBADD,gBA+BC,QAAC,IAAD;AACE,QAAA,IAAI,EACF;AACAZ,QAAAA,KAAK,CAACU,IAAN,GACEV,KAAK,CAACU,IADR,gBAGE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,0BAFd;AAGE,UAAA,KAAK,EAAER,UAHT;AAIE,UAAA,QAAQ,EAAGe,KAAD,IAAW;AACnBd,YAAAA,aAAa,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,WANH;AAOE,UAAA,MAAM,EAAGF,KAAD,IAAW;AACjBjB,YAAAA,KAAK,CAACU,IAAN,GAAaO,KAAK,CAACC,MAAN,CAAaC,KAA1B;AACAlB,YAAAA,QAAQ,CAAC,EAAE,GAAGD;AAAL,aAAD,CAAR;AACD;AAVH;AAAA;AAAA;AAAA;AAAA,gBANN,CAmBI;;AAnBJ;AAAA;AAAA;AAAA;AAAA;AAhCJ;AAAA;AAAA;AAAA;AAAA,YADF,EAwDGA,KAAK,CAACK,MAAN,GAAeN,YAAf,GAA8B,IAxDjC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4DD;;GAtGuBF,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport Folder from \"../Folder\";\nimport File from \"../File\";\nimport \"./index.css\";\n\nexport default function Explorer({ folderItems }) {\n  let nestedFolder = [];\n  const [items, setItems] = useState(folderItems);\n  const [inputValue, setInputValue] = useState(\"\");\n\n  function toggleFolder() {\n    items.isOpen = !items.isOpen;\n    setItems({ ...items });\n  }\n\n  function addNewFolder() {\n    items.children.push({\n      type: \"folder\",\n      name: \"\",\n      isOpen: false,\n      children: [],\n    });\n    items.isOpen = true;\n    setItems({ ...items });\n  }\n\n  function addNewFile() {\n    items.children.push({\n      type: \"file\",\n      name: \"\",\n      children: [],\n    });\n    items.isOpen = true;\n    setItems({ ...items });\n  }\n\n  function emptyFolder() {\n    items.children = [];\n    setItems({ ...items });\n  }\n\n  if (items.children.length > 0) {\n    nestedFolder = items.children.map((item, index) => (\n      <Explorer key={index} folderItems={item} />\n    ));\n  }\n\n  return (\n    <div className=\"explorer\">\n      <div className=\"displayHierarchy\">\n        {items.type === \"folder\" ? (\n          <>\n            <Folder\n              items={items}\n              name={\n                items.name ? (\n                  items.name\n                ) : (\n                  <input\n                    type=\"text\"\n                    placeholder=\"enter the folder name here\"\n                    value={inputValue}\n                    onChange={(event) => {\n                      setInputValue(event.target.value);\n                    }}\n                    onBlur={(event) => {\n                      items.name = event.target.value;\n                      items.isOpen = true;\n                      setItems({ ...items });\n                    }}\n                  />\n                )\n              }\n              open={items.isOpen && items.children.length ? \"open\" : \"close\"}\n              toggleFolder={toggleFolder}\n            />\n            <button onClick={addNewFolder}>New Folder</button>\n            <button onClick={addNewFile}>New File</button>\n            <button onClick={emptyFolder}>Empty Folder</button> // styling\n          </>\n        ) : (\n          <File\n            name={\n              // remove file from prop name\n              items.name ? (\n                items.name\n              ) : (\n                <input\n                  type=\"text\"\n                  placeholder=\"enter the file name here\"\n                  value={inputValue}\n                  onChange={(event) => {\n                    setInputValue(event.target.value);\n                  }}\n                  onBlur={(event) => {\n                    items.name = event.target.value;\n                    setItems({ ...items });\n                  }}\n                />\n              )\n            } // create a function and do both folder and file functionality there\n          />\n        )}\n      </div>\n      {items.isOpen ? nestedFolder : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}