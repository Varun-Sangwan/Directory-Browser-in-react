{"ast":null,"code":"var _jsxFileName = \"/Users/Varun/Data/Workspace/The career path/React/file-browser/src/mapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Folder from './folder';\nimport File from './file';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Mapper({\n  folderItems\n}) {\n  _s();\n\n  let nestedFolder = [];\n  const [open, setOpen] = useState(folderItems.isOpen ? 'open' : 'close');\n  const [folderNameValue, setFolderNameValue] = useState('');\n\n  function handleImgDivClick() {\n    folderItems.isOpen = !folderItems.isOpen;\n    setOpen(folderItems.isOpen ? 'open' : 'close');\n  }\n\n  function addNewFolder(folderData) {\n    function addValue(e) {\n      setFolderNameValue(e.target.value);\n    }\n\n    folderData.push({\n      type: 'Folder',\n      name: /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"enter the folder name here\",\n        value: folderNameValue,\n        onChange: addValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }, this),\n      isOpen: false,\n      insideFolder: []\n    });\n  }\n\n  if (folderItems.insideFolder.length > 0) {\n    nestedFolder = folderItems.insideFolder.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Mapper, {\n        folderItems: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      \"marginLeft\": \"25px\",\n      \"marginTop\": \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayHierarchy\",\n      children: folderItems.type === \"Folder\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Folder, {\n          open: open,\n          handleImgDivClick: handleImgDivClick,\n          folderName: folderItems.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNewFolder(folderItems.insideFolder),\n          children: \"New Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"New File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(File, {\n        fileName: folderItems.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), folderItems.isOpen ? nestedFolder : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mapper, \"p+gdd87L+XFhPSe5eRNi8cgrEWg=\");\n\n_c = Mapper;\nexport default Mapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mapper\");","map":{"version":3,"sources":["/Users/Varun/Data/Workspace/The career path/React/file-browser/src/mapper.js"],"names":["React","useState","Folder","File","Mapper","folderItems","nestedFolder","open","setOpen","isOpen","folderNameValue","setFolderNameValue","handleImgDivClick","addNewFolder","folderData","addValue","e","target","value","push","type","name","insideFolder","length","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,WAAP;;;;AAEA,SAASC,MAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAA8B;AAAA;;AAC5B,MAAIC,YAAY,GAAE,EAAlB;AACA,QAAM,CAACC,IAAD,EAAQC,OAAR,IAAmBP,QAAQ,CAACI,WAAW,CAACI,MAAZ,GAAqB,MAArB,GAA8B,OAA/B,CAAjC;AACA,QAAM,CAACC,eAAD,EAAiBC,kBAAjB,IAAuCV,QAAQ,CAAC,EAAD,CAArD;;AAEA,WAASW,iBAAT,GAA4B;AAC1BP,IAAAA,WAAW,CAACI,MAAZ,GAAqB,CAACJ,WAAW,CAACI,MAAlC;AACAD,IAAAA,OAAO,CAACH,WAAW,CAACI,MAAZ,GAAqB,MAArB,GAA8B,OAA/B,CAAP;AACD;;AAED,WAASI,YAAT,CAAsBC,UAAtB,EAAiC;AAC/B,aAASC,QAAT,CAAkBC,CAAlB,EAAoB;AAClBL,MAAAA,kBAAkB,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACD;;AACDJ,IAAAA,UAAU,CAACK,IAAX,CACE;AACEC,MAAAA,IAAI,EAAG,QADT;AAEEC,MAAAA,IAAI,eAAG;AAAO,QAAA,WAAW,EAAC,4BAAnB;AAAgD,QAAA,KAAK,EAAGX,eAAxD;AAAyE,QAAA,QAAQ,EAAGK;AAApF;AAAA;AAAA;AAAA;AAAA,cAFT;AAGEN,MAAAA,MAAM,EAAG,KAHX;AAIEa,MAAAA,YAAY,EAAG;AAJjB,KADF;AAOD;;AAED,MAAGjB,WAAW,CAACiB,YAAZ,CAAyBC,MAAzB,GAAkC,CAArC,EAAwC;AACtCjB,IAAAA,YAAY,GAAGD,WAAW,CAACiB,YAAZ,CAAyBE,GAAzB,CAA6B,CAACC,IAAD,EAAMC,KAAN,KAAc;AACxD,0BACE,QAAC,MAAD;AAAqB,QAAA,WAAW,EAAID;AAApC,SAAcC,KAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJc,CAAf;AAKD;;AAED,sBACE;AAAK,IAAA,KAAK,EAAI;AAAC,oBAAe,MAAhB;AAAyB,mBAAc;AAAvC,KAAd;AAAA,4BACE;AAAK,MAAA,SAAS,EAAE,kBAAhB;AAAA,gBACGrB,WAAW,CAACe,IAAZ,KAAqB,QAArB,gBACC;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAIb,IAAhB;AAAsB,UAAA,iBAAiB,EAAGK,iBAA1C;AAA6D,UAAA,UAAU,EAAEP,WAAW,CAACgB;AAArF;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAIR,YAAY,CAACR,WAAW,CAACiB,YAAb,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,sBADD,gBAOC,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAGjB,WAAW,CAACgB;AAA7B;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YADF,EAYKhB,WAAW,CAACI,MAAZ,GAAqBH,YAArB,GAAoC,IAZzC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAhDQF,M;;KAAAA,M;AAiDT,eAAeA,MAAf","sourcesContent":["import React , {useState} from 'react'\nimport Folder from './folder'\nimport File from './file'\nimport './App.css'\n\nfunction Mapper({folderItems}){\n  let nestedFolder =[]\n  const [open , setOpen] = useState(folderItems.isOpen ? 'open' : 'close')  \n  const [folderNameValue,setFolderNameValue] = useState('')\n\n  function handleImgDivClick(){\n    folderItems.isOpen = !folderItems.isOpen\n    setOpen(folderItems.isOpen ? 'open' : 'close')\n  }\n\n  function addNewFolder(folderData){\n    function addValue(e){\n      setFolderNameValue(e.target.value)\n    }\n    folderData.push(\n      {\n        type : 'Folder',\n        name : <input placeholder='enter the folder name here' value ={folderNameValue} onChange ={addValue}/>,\n        isOpen : false,\n        insideFolder : []\n    })\n  }\n\n  if(folderItems.insideFolder.length > 0 ){\n    nestedFolder = folderItems.insideFolder.map((item,index)=>{\n      return (\n        <Mapper key ={index} folderItems = {item} />\n      )\n    })\n  }\n\n  return (\n    <div style = {{\"marginLeft\" : \"25px\" , \"marginTop\" : \"10px\" }}>\n      <div className ='displayHierarchy'>\n        {folderItems.type === \"Folder\" ? \n          <>\n            <Folder open = {open} handleImgDivClick ={handleImgDivClick} folderName={folderItems.name}/> \n            <button onClick={()=>addNewFolder(folderItems.insideFolder)}>New Folder</button>\n            <button>New File</button>\n          </>\n          : \n          <File fileName ={folderItems.name}/>\n        }\n      </div>\n        {folderItems.isOpen ? nestedFolder : null}\n    </div>\n  )\n\n}\nexport default Mapper;"]},"metadata":{},"sourceType":"module"}