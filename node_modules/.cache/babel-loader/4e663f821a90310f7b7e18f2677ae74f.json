{"ast":null,"code":"var _jsxFileName = \"/Users/Varun/Data/Workspace/The career path/React/file-browser/src/mapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Folder from './folder';\nimport File from './file';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Mapper({\n  folderItems\n}) {\n  _s();\n\n  let nestedFolder = [];\n  const [open, setOpen] = useState(folderItems.isOpen ? 'open' : 'close');\n\n  function handleImgDivClick() {\n    if (open === 'open') {\n      setOpen('close');\n    } else {\n      setOpen('open');\n    }\n\n    folderItems.isOpen = !folderItems.isOpen;\n  }\n\n  if (folderItems.insideFolder.length > 0) {\n    nestedFolder = folderItems.insideFolder.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Mapper, {\n        folderItems: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      \"marginLeft\": \"25px\",\n      \"marginTop\": \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"displayHierarchy\",\n      children: [folderItems.type === \"Folder\" ? /*#__PURE__*/_jsxDEV(Folder, {\n        open: open,\n        handleImgDivClick: handleImgDivClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(File, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), folderItems.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), folderItems.isOpen ? nestedFolder : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mapper, \"UduaK55HgDabawCR15it21e4hco=\");\n\n_c = Mapper;\nexport default Mapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mapper\");","map":{"version":3,"sources":["/Users/Varun/Data/Workspace/The career path/React/file-browser/src/mapper.js"],"names":["React","useState","Folder","File","Mapper","folderItems","nestedFolder","open","setOpen","isOpen","handleImgDivClick","insideFolder","length","map","item","index","type","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,WAAP;;;AAEA,SAASC,MAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAA8B;AAAA;;AAC5B,MAAIC,YAAY,GAAE,EAAlB;AACA,QAAM,CAACC,IAAD,EAAQC,OAAR,IAAmBP,QAAQ,CAACI,WAAW,CAACI,MAAZ,GAAqB,MAArB,GAA8B,OAA/B,CAAjC;;AAEA,WAASC,iBAAT,GAA4B;AAC1B,QAAGH,IAAI,KAAG,MAAV,EAAiB;AACfC,MAAAA,OAAO,CAAC,OAAD,CAAP;AACD,KAFD,MAEO;AACLA,MAAAA,OAAO,CAAC,MAAD,CAAP;AACD;;AACDH,IAAAA,WAAW,CAACI,MAAZ,GAAqB,CAACJ,WAAW,CAACI,MAAlC;AACD;;AAED,MAAGJ,WAAW,CAACM,YAAZ,CAAyBC,MAAzB,GAAkC,CAArC,EAAwC;AACtCN,IAAAA,YAAY,GAAGD,WAAW,CAACM,YAAZ,CAAyBE,GAAzB,CAA6B,CAACC,IAAD,EAAMC,KAAN,KAAc;AACxD,0BACE,QAAC,MAAD;AAAqB,QAAA,WAAW,EAAID;AAApC,SAAcC,KAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJc,CAAf;AAKD;;AAED,sBACE;AAAK,IAAA,KAAK,EAAI;AAAC,oBAAe,MAAhB;AAAyB,mBAAc;AAAvC,KAAd;AAAA,4BACE;AAAK,MAAA,SAAS,EAAE,kBAAhB;AAAA,iBACGV,WAAW,CAACW,IAAZ,KAAqB,QAArB,gBACC,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAIT,IAAhB;AAAsB,QAAA,iBAAiB,EAAGG;AAA1C;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAJJ,EAMGL,WAAW,CAACY,IANf;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EASKZ,WAAW,CAACI,MAAZ,GAAqBH,YAArB,GAAoC,IATzC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAnCQF,M;;KAAAA,M;AAoCT,eAAeA,MAAf","sourcesContent":["import React , {useState} from 'react'\nimport Folder from './folder'\nimport File from './file'\nimport './App.css'\n\nfunction Mapper({folderItems}){\n  let nestedFolder =[]\n  const [open , setOpen] = useState(folderItems.isOpen ? 'open' : 'close')  \n\n  function handleImgDivClick(){\n    if(open==='open'){\n      setOpen('close');\n    } else {\n      setOpen('open')\n    }\n    folderItems.isOpen = !folderItems.isOpen\n  }\n\n  if(folderItems.insideFolder.length > 0 ){\n    nestedFolder = folderItems.insideFolder.map((item,index)=>{\n      return (\n        <Mapper key ={index} folderItems = {item} />\n      )\n    })\n  }\n\n  return (\n    <div style = {{\"marginLeft\" : \"25px\" , \"marginTop\" : \"10px\" }}>\n      <div className ='displayHierarchy'>\n        {folderItems.type === \"Folder\" ? \n          <Folder open = {open} handleImgDivClick ={handleImgDivClick}/> \n          : \n          <File />\n        }\n        {folderItems.name}\n      </div>\n        {folderItems.isOpen ? nestedFolder : null}\n    </div>\n  )\n\n}\nexport default Mapper;"]},"metadata":{},"sourceType":"module"}