{"ast":null,"code":"var _jsxFileName = \"/Users/Varun/Data/Workspace/The career path/React/file-browser/src/folder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Folder({\n  folderCount,\n  ...restProps\n}) {\n  _s();\n\n  const [open, setOpen] = useState('close');\n\n  function handleImgDivClick() {\n    console.log(open);\n\n    if (open === 'open') {\n      setOpen('close');\n    } else {\n      setOpen('open');\n    }\n  }\n\n  function folderMap() {\n    for (let i = 0; i < folderCount; i++) {\n      /*#__PURE__*/\n      _jsxDEV(\"img\", {\n        src: `./images/${open}.png`,\n        alt: \"folder\",\n        onClick: handleImgDivClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `./images/${open}.png`,\n      alt: \"folder\",\n      onClick: handleImgDivClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), folderMap()]\n  }, void 0, true);\n}\n\n_s(Folder, \"d9bMlYYAZKq1NCgPjZ6sGB96tdk=\");\n\n_c = Folder;\nexport default Folder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Folder\");","map":{"version":3,"sources":["/Users/Varun/Data/Workspace/The career path/React/file-browser/src/folder.js"],"names":["React","useState","Folder","folderCount","restProps","open","setOpen","handleImgDivClick","console","log","folderMap","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;;;;AAEA,SAASC,MAAT,CAAgB;AAACC,EAAAA,WAAD;AAAa,KAAGC;AAAhB,CAAhB,EAA4C;AAAA;;AAC1C,QAAM,CAACC,IAAD,EAAQC,OAAR,IAAmBL,QAAQ,CAAC,OAAD,CAAjC;;AAEA,WAASM,iBAAT,GAA4B;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,QAAGA,IAAI,KAAG,MAAV,EAAiB;AACfC,MAAAA,OAAO,CAAC,OAAD,CAAP;AACD,KAFD,MAEO;AACLA,MAAAA,OAAO,CAAC,MAAD,CAAP;AACD;AACF;;AAED,WAASI,SAAT,GAAoB;AAClB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAeA,CAAC,GAACR,WAAjB,EAA6BQ,CAAC,EAA9B,EAAiC;AAC7B;AAAA;AAAK,QAAA,GAAG,EAAG,YAAWN,IAAK,MAA3B;AAAkC,QAAA,GAAG,EAAC,QAAtC;AAA+C,QAAA,OAAO,EAAEE;AAAxD;AAAA;AAAA;AAAA;AAAA;AACH;AACF;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,GAAG,EAAG,YAAWF,IAAK,MAA3B;AAAkC,MAAA,GAAG,EAAC,QAAtC;AAA+C,MAAA,OAAO,EAAEE;AAAxD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGG,SAAS,EAFZ;AAAA,kBADF;AAMD;;GAxBQR,M;;KAAAA,M;AA0BT,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react'\nimport './App.css'\n\nfunction Folder({folderCount,...restProps}) {\n  const [open , setOpen] = useState('close')\n\n  function handleImgDivClick(){\n    console.log(open)\n    if(open==='open'){\n      setOpen('close')\n    } else {\n      setOpen('open')\n    }\n  }\n\n  function folderMap(){\n    for (let i = 0;i<folderCount;i++){\n        <img src={`./images/${open}.png`} alt='folder' onClick={handleImgDivClick}/>\n    }\n  }\n\n  return (\n    <>\n      <img src={`./images/${open}.png`} alt='folder' onClick={handleImgDivClick}/>\n      {folderMap()}\n    </>\n  );\n}\n\nexport default Folder;"]},"metadata":{},"sourceType":"module"}